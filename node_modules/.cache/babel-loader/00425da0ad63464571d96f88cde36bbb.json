{"ast":null,"code":"var _jsxFileName = \"/Users/vivedhajoseph/react/quotes-app-frontend/src/Login.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport axios from 'axios';\nimport { useNavigate } from \"react-router-dom\";\nimport \"./App.css\";\n/* \n\n1. User enters creds\n2. Make login API call\n3. If true, store access token in session storage and navigate to App.js\n4. If false, show error message from API\n\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    var postData = {\n      name: name,\n      password: password\n    };\n    let axiosConfig = {\n      headers: {\n        xsrfHeaderName: 'X-CSRF-Token',\n        withCredentials: true\n      }\n    }; // fetch(\"http://127.0.0.1:8000/api/login\", {\n    //     method: 'POST',\n    //     headers: {\n    //         'Accept': 'application/json',\n    //         'X_CSRF_TOKEN':('meta[name=\"csrf-token\"]').content,\n    //     },\n    //     body: JSON.stringify({ user: name, password })\n    // })\n\n    axios.post('http://127.0.0.1:8000/api/login', postData, axiosConfig).then(function (response) {\n      sessionStorage.setItem(\"access-token\", response.data['access_token']);\n      navigate(\"/\");\n    }, error => alert(error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"name\",\n          required: true,\n          onChange: event => setName(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          required: true,\n          onChange: event => setPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"primary\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 12\n  }, this);\n};\n\n_s(App, \"hFwDjfbQsHRZXYyP7S3+iq77he4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","axios","useNavigate","App","navigate","name","setName","password","setPassword","handleSubmit","e","preventDefault","postData","axiosConfig","headers","xsrfHeaderName","withCredentials","post","then","response","sessionStorage","setItem","data","error","alert","event","target","value"],"sources":["/Users/vivedhajoseph/react/quotes-app-frontend/src/Login.js"],"sourcesContent":["import { useState } from \"react\";\nimport axios from 'axios';\nimport { useNavigate } from \"react-router-dom\";\nimport \"./App.css\";\n\n/* \n\n1. User enters creds\n2. Make login API call\n3. If true, store access token in session storage and navigate to App.js\n4. If false, show error message from API\n\n*/\n\nconst App = () => {\n\n    const navigate = useNavigate();\n\n    const [name, setName] = useState('');\n    const [password, setPassword] = useState('');\n\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        var postData = {\n            name: name,\n            password: password\n        };\n\n        let axiosConfig = {\n            headers: {\n                xsrfHeaderName: 'X-CSRF-Token',\n                withCredentials: true\n            }\n        };\n\n\n        // fetch(\"http://127.0.0.1:8000/api/login\", {\n        //     method: 'POST',\n        //     headers: {\n        //         'Accept': 'application/json',\n        //         'X_CSRF_TOKEN':('meta[name=\"csrf-token\"]').content,\n        //     },\n        //     body: JSON.stringify({ user: name, password })\n        // })\n        axios.post('http://127.0.0.1:8000/api/login', postData, axiosConfig)\n            .then(function (response) {\n                sessionStorage.setItem(\"access-token\", response.data['access_token']);\n                navigate(\"/\");\n            }, error => alert(error))\n    };\n\n    return <div className=\"App\">\n        <form className=\"form\" onSubmit={handleSubmit}>\n            <div className=\"input-group\">\n                <label htmlFor=\"name\">Name</label>\n                <input name=\"name\" required onChange={event => setName(event.target.value)} />\n            </div>\n            <div className=\"input-group\">\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" name=\"password\" required onChange={event => setPassword(event.target.value)} />\n            </div>\n            <button className=\"primary\">Login</button>\n        </form>\n    </div>\n}\n\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAO,WAAP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAEd,MAAMC,QAAQ,GAAGF,WAAW,EAA5B;EAEA,MAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;;EAGA,MAAMS,YAAY,GAAGC,CAAC,IAAI;IACtBA,CAAC,CAACC,cAAF;IAEA,IAAIC,QAAQ,GAAG;MACXP,IAAI,EAAEA,IADK;MAEXE,QAAQ,EAAEA;IAFC,CAAf;IAKA,IAAIM,WAAW,GAAG;MACdC,OAAO,EAAE;QACLC,cAAc,EAAE,cADX;QAELC,eAAe,EAAE;MAFZ;IADK,CAAlB,CARsB,CAgBtB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IACAf,KAAK,CAACgB,IAAN,CAAW,iCAAX,EAA8CL,QAA9C,EAAwDC,WAAxD,EACKK,IADL,CACU,UAAUC,QAAV,EAAoB;MACtBC,cAAc,CAACC,OAAf,CAAuB,cAAvB,EAAuCF,QAAQ,CAACG,IAAT,CAAc,cAAd,CAAvC;MACAlB,QAAQ,CAAC,GAAD,CAAR;IACH,CAJL,EAIOmB,KAAK,IAAIC,KAAK,CAACD,KAAD,CAJrB;EAKH,CA7BD;;EA+BA,oBAAO;IAAK,SAAS,EAAC,KAAf;IAAA,uBACH;MAAM,SAAS,EAAC,MAAhB;MAAuB,QAAQ,EAAEd,YAAjC;MAAA,wBACI;QAAK,SAAS,EAAC,aAAf;QAAA,wBACI;UAAO,OAAO,EAAC,MAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAO,IAAI,EAAC,MAAZ;UAAmB,QAAQ,MAA3B;UAA4B,QAAQ,EAAEgB,KAAK,IAAInB,OAAO,CAACmB,KAAK,CAACC,MAAN,CAAaC,KAAd;QAAtD;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAKI;QAAK,SAAS,EAAC,aAAf;QAAA,wBACI;UAAO,OAAO,EAAC,UAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAO,IAAI,EAAC,UAAZ;UAAuB,IAAI,EAAC,UAA5B;UAAuC,QAAQ,MAA/C;UAAgD,QAAQ,EAAEF,KAAK,IAAIjB,WAAW,CAACiB,KAAK,CAACC,MAAN,CAAaC,KAAd;QAA9E;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QALJ,eASI;QAAQ,SAAS,EAAC,SAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QATJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADG;IAAA;IAAA;IAAA;EAAA,QAAP;AAaH,CApDD;;GAAMxB,G;UAEeD,W;;;KAFfC,G;AAuDN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}